// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrainingAPI.Connectors.Database;

#nullable disable

namespace TrainingAPI.Connectors.Migrations
{
    [DbContext(typeof(TrainingDbContext))]
    partial class TrainingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("PersonalizeFit.Training")
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrainingAPI.Entity.Entities.StudentHasTrainingPreset", b =>
                {
                    b.Property<int>("TrainingPresetId")
                        .HasColumnType("integer");

                    b.Property<string>("AcquisitionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TrainingPresetId");

                    b.ToTable("StudentHasTrainingPreset", "PersonalizeFit.Training");
                });

            modelBuilder.Entity("TrainingAPI.Entity.Entities.TrainingGroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TrainingPresetId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPresetId");

                    b.ToTable("TrainingGroups", "PersonalizeFit.Training");
                });

            modelBuilder.Entity("TrainingAPI.Entity.Entities.TrainingGroupHasExercise", b =>
                {
                    b.Property<int>("TrainingGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TrainingSetJsonString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TrainingGroupId", "ExerciseId");

                    b.ToTable("TrainingGroupHasExercise", "PersonalizeFit.Training");
                });

            modelBuilder.Entity("TrainingAPI.Entity.Entities.TrainingPresetEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("PresetDefaultFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TrainerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TrainingPresets", "PersonalizeFit.Training");
                });

            modelBuilder.Entity("TrainingAPI.Entity.Entities.StudentHasTrainingPreset", b =>
                {
                    b.HasOne("TrainingAPI.Entity.Entities.TrainingPresetEntity", "TrainingPreset")
                        .WithMany()
                        .HasForeignKey("TrainingPresetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingPreset");
                });

            modelBuilder.Entity("TrainingAPI.Entity.Entities.TrainingGroupEntity", b =>
                {
                    b.HasOne("TrainingAPI.Entity.Entities.TrainingPresetEntity", "TrainingPreset")
                        .WithMany()
                        .HasForeignKey("TrainingPresetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingPreset");
                });

            modelBuilder.Entity("TrainingAPI.Entity.Entities.TrainingGroupHasExercise", b =>
                {
                    b.HasOne("TrainingAPI.Entity.Entities.TrainingGroupEntity", "TrainingGroup")
                        .WithMany()
                        .HasForeignKey("TrainingGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
